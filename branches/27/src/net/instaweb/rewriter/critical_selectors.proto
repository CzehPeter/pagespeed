/*
 * Copyright 2013 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Author: morlovich@google.com (Maksim Orlovich)

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package net_instaweb;

// This represents aggregated list of all selectors of the CSS that was needed
// to render the above-the-fold portion of a page.
//
// Next free id: 4
// TODO(morlovich): We may want to keep track of information on inputs to detect
// case of HTML inputs.
message CriticalSelectorSet {
  message BeaconResponse {
    repeated string selectors = 1;
  }

  // The set of all selectors that were guarding the CSS that got applied for
  // the above-the-fold portion of the webpage.
  //
  // Duplicates should not be included. In case of something using a
  // pseudo-element (e.g. foo::before), only the base portion should be
  // included.
  repeated string critical_selectors = 1;

  // Id 2 deleted, should not be reused.

  // Store a history of the last N reported critical selectors from beacons. The
  // critical_selectors field above will be recalculated when receiving and
  // storing a new critical image beacon response. It will be set to the union
  // of all critical selectors received so far.
  repeated BeaconResponse selector_set_history = 3;
}

message CriticalSelectorSummarizedCss {
  optional string deprecated_content = 1;
  message ResourceSummary {
    // Excerpted portion of CSS relevant to critical selectors.
    optional string content = 1;

    // Media that comes from HTML, and is relevant to screen.
    optional string media = 2;

    // This is true if the HTML had some media, but none of them
    // applied to screen (which results in media empty, but is different
    // from not having any media listed at all, which does apply to all)
    optional bool all_media_non_screen = 3 [ default = false ];

    // True if CSS is out-of-line.
    optional bool external = 4 [ default = false ];

    // Used only when external = true
    optional string base = 5;
  }
  repeated ResourceSummary summary = 2;
}
