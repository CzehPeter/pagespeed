#summary What you need to do to port mod_pagespeed to another server/system

Do you want to port mod_pagespeed to another server or integrate it in another system? Great! We developed mod_pagespeed to be modular and almost completely independent from Apache. In fact, we believe the only Apache-specific code is in the net/instaweb/apache directory.

If you look into our [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc source], our main code is in [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb net/instaweb/]:

 * [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb%2Futil util/] and [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb%2Fhttp http/] have many of our basic tools, including abstract base classes like !MessageHandler, Timer and !UrlFetcher and some example implementations, you will have to make your own implementations of many of these.
 * [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb%2Fhtmlparse htmlparse/] has the core HTML parser, you shouldn't have to deal with that at all.
 * [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb%2Frewriter rewriter/] has the rewriting filters and framework.   The central integration point is the partially abstract class here !RewriteDriverFactory.  Your integration effort will start by subclassing it and implementing its pure virtual methods.

You will probably have to implement a port for the following classes (see example implementations in the [http://code.google.com/p/modpagespeed/source/browse/#svn%2Ftrunk%2Fsrc%2Fnet%2Finstaweb%2Fapache apache/] directory):

 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/message_handler.h MessageHandler] - Error handling (See for example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/file_message_handler.h FileMessageHandler] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apache_message_handler.h ApacheMessageHandler])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/file_system.h FileSystem] (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/stdio_file_system.h StdioFileSystem] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apr_file_system.h AprFileSystem])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/abstract_condvar.h AbstractCondvar] (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/pthread_condvar.h PthreadCondvar] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apr_condvar.h AprCondvar])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/abstract_mutex.h AbstractMutex] (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/pthread_mutex.h PthreadMutex] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apr_mutex.h AprMutex])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/statistics.h Statistics] - Keep track of various global stats (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/simple_stats.h SimpleStats] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apr_statistics.h AprStatistics])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/timer.h Timer] (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/util/public/mock_timer.h MockTimer] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apr_timer.h AprTimer])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/public/url_fetcher.h UrlFetcher] - Fetcher for resources by URL (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/public/wget_url_fetcher.h WgetUrlFetcher] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/public/sync_fetcher_adapter.h SyncFetcherAdapter])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/public/url_async_fetcher.h UrlAsyncFetcher] - Same but with a callback interface (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/public/wait_url_async_fetcher.h WgetUrlAsyncFetcher] and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/serf_url_async_fetcher.h SerfUrlAsyncFetcher]; the latter supports an asynchronous event model built on top of [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/http/url_pollable_async_fetcher.h UrlPollableAsyncFetcher])
 * [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/rewriter/public/rewrite_driver_factory.h RewriteDriverFactory] - Manages all the options and classes specific to an implementation (See example [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/apache_rewrite_driver_factory.h ApacheRewriteDriverFactory])

Then to actually invoke the code, you'll need to create a !FooRewriteDriverFactory to create all your objects, and then [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/instaweb_context.cc#124 StartParseWithType(url, content_type)], [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/instaweb_context.cc#162 ParseText(text)] between each flush of the server, and [http://code.google.com/p/modpagespeed/source/browse/trunk/src/net/instaweb/apache/instaweb_context.h#63 FinishParse()] for each request.

Please contact us (mod-pagespeed-discuss@googlegroups.com) if you are looking into this or having any problems. We are not guaranteeing that any internal interfaces stay the same, so we could easily break you if we don't know that you are using them.