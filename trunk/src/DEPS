# Copyright 2009 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

vars = {
  "chromium_trunk":
    "http://src.chromium.org/svn/trunk",
  "chromium_revision": "@50096",
  "chromium_deps_root": "src/third_party/chromium_deps",
  "libpagespeed_trunk": "http://page-speed.googlecode.com/svn/lib/trunk",
  "libpagespeed_revision": "@head",
  "libpagespeed_deps_root": "src/third_party/libpagespeed_deps",
  "opencv_src": "https://code.ros.org/svn/opencv/tags/2.1",
  "opencv_revision": "@head",
}

deps = {
  # Fetch chromium DEPS so we can sync our other dependencies relative
  # to it.
  Var("chromium_deps_root"):
    File(Var("chromium_trunk") + "/src/DEPS" + Var("chromium_revision")),

  Var("libpagespeed_deps_root"):
    File(Var("libpagespeed_trunk") + "/src/DEPS" +
      Var("libpagespeed_revision")),

  "src/base":
    Var("libpagespeed_trunk") + "/src/base" + Var("libpagespeed_revision"),

  "src/build/temp_gyp":
    Var("libpagespeed_trunk") + "/src/build/temp_gyp" +
      Var("libpagespeed_revision"),

  "src/googleurl_noicu":
    (Var("libpagespeed_trunk") + "/src/googleurl_noicu" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/build":
    (Var("libpagespeed_trunk") + "/src/build" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/build/internal":
    Var("chromium_trunk") + "/src/build/internal" + Var("chromium_revision"),

  "src/third_party/libpagespeed/src/pagespeed/core":
    (Var("libpagespeed_trunk") + "/src/pagespeed/core" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/pagespeed/image_compression":
    (Var("libpagespeed_trunk") + "/src/pagespeed/image_compression" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/pagespeed/proto":
    (Var("libpagespeed_trunk") + "/src/pagespeed/proto" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/third_party":
    (Var("libpagespeed_trunk") + "/src/third_party" +
     Var("libpagespeed_revision")),

  "src/third_party/opencv/src/opencv/src":
    Var("opencv_src") + "/opencv/src" + Var("opencv_revision"),

  "src/third_party/opencv/src/opencv/include":
    Var("opencv_src") + "/opencv/include" + Var("opencv_revision"),

  "src/third_party/opencv/src/opencv/3rdparty/lapack":
    Var("opencv_src") + "/opencv/3rdparty/lapack" + Var("opencv_revision"),

  "src/third_party/opencv/src/opencv/3rdparty/include":
    Var("opencv_src") + "/opencv/3rdparty/include" + Var("opencv_revision"),

  "src/build/internal": From(Var("libpagespeed_deps_root")),
  "src/build/linux": From(Var("libpagespeed_deps_root")),
  "src/build/mac": From(Var("libpagespeed_deps_root")),
  "src/build/util": From(Var("libpagespeed_deps_root")),
  "src/build/win": From(Var("libpagespeed_deps_root")),
  "src/testing": From(Var("libpagespeed_deps_root")),
  "src/third_party/libjpeg": From(Var("libpagespeed_deps_root")),
  "src/third_party/libpng": From(Var("libpagespeed_deps_root")),
  "src/third_party/protobuf2": From(Var("libpagespeed_deps_root")),
  "src/third_party/zlib": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/base": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/build": From(Var("libpagespeed_deps_root")),
  "src/tools/data_pack": From(Var("libpagespeed_deps_root")),
  "src/tools/grit": From(Var("libpagespeed_deps_root")),

  "src/googleurl": From(Var("chromium_deps_root")),
  "src/testing/gtest": From(Var("chromium_deps_root")),
  "src/third_party/protobuf2/src": From(Var("chromium_deps_root")),
  "src/tools/gyp": From(Var("chromium_deps_root")),
}


deps_os = {
  "win": {
    "src/third_party/cygwin": From(Var("chromium_deps_root")),
    "src/third_party/python_24": From(Var("chromium_deps_root")),
  },
  "mac": {
  },
  "unix": {
  },
}


include_rules = [
  # Everybody can use some things.
  "+base",
  "+build",
]


# checkdeps.py shouldn't check include paths for files in these dirs:
skip_child_includes = [
   "testing",
]


hooks = [
  {
    # A change to a .gyp, .gypi, or to GYP itself should run the generator.
    "pattern": ".",
    "action": ["python", "src/build/gyp_chromium"],
  },
]
